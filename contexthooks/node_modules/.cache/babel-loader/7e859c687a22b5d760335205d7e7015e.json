{"ast":null,"code":"var _jsxFileName = \"/Users/onuchukwuchika/Projects/Reacts/contexthooks/src/contexts/AuthContext.js\";\nimport React, { Component, createContext } from 'react';\nexport const AuthContext = createContext();\nthis.setState((state, props) => {\n  return {};\n});\n\nclass AuthenticateProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isAuthenticated: false\n    };\n\n    this.toggleAuth = () => {\n      this.setState({\n        isAuthenticated: !this.state.isAuthenticated\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(AuthContext.Provider, {\n      value: { ...this.state,\n        toggleAuth: this.toggleAuth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default AuthenticateProvider;","map":{"version":3,"sources":["/Users/onuchukwuchika/Projects/Reacts/contexthooks/src/contexts/AuthContext.js"],"names":["React","Component","createContext","AuthContext","setState","state","props","AuthenticateProvider","isAuthenticated","toggleAuth","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,WAAW,GAAGD,aAAa,EAAjC;AAEP,KAAKE,QAAL,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAE,SAAO,EAAP;AAAY,CAA9C;;AAGA,MAAMC,oBAAN,SAAmCN,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CI,KAD2C,GACnC;AACNG,MAAAA,eAAe,EAAE;AADX,KADmC;;AAAA,SAK3CC,UAL2C,GAK9B,MAAM;AACjB,WAAKL,QAAL,CAAc;AAAEI,QAAAA,eAAe,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAA/B,OAAd;AACD,KAP0C;AAAA;;AAS3CE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAAE,GAAG,KAAKL,KAAV;AAAiBI,QAAAA,UAAU,EAAE,KAAKA;AAAlC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWK,QADd,CADF;AAKD;;AAf0C;;AAkB7C,eAAeJ,oBAAf","sourcesContent":["import React, { Component, createContext } from 'react';\n\nexport const AuthContext = createContext();\n\nthis.setState((state, props) => { return {  }})\n\n\nclass AuthenticateProvider extends Component {\n  state = {\n    isAuthenticated: false\n  };\n\n  toggleAuth = () => {\n    this.setState({ isAuthenticated: !this.state.isAuthenticated });\n  };\n\n  render() {\n    return (\n      <AuthContext.Provider value={{ ...this.state, toggleAuth: this.toggleAuth }}>\n        {this.props.children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport default AuthenticateProvider;"]},"metadata":{},"sourceType":"module"}